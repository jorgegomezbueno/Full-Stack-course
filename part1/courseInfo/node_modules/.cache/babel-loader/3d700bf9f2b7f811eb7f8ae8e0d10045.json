{"ast":null,"code":"var _jsxFileName = \"/home/jorge/Practica/Full-Stack-course/part1/src/index.js\";\n\n/*\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n\nconst Course ={\n  name:'Half Stack application development',\n  parts:\n  [{\n    name: 'Fundamentals of React',\n    exercises: 10\n  },\n  {\n    name: 'Using props to pass data',\n    exercises: 7\n  },\n  {\n    name: 'State of a component',\n    exercises: 14\n  }],\n}\n\nconst Part= (props) =>{\n  return(\n    <div>\n      <p>{props.part} {props.exercise}</p>\n    </div>\n  )\n}\n\nconst Header = (props) =>{\n  return(\n    <div>\n      <h1>{props.course}</h1>\n    </div>\n  )\n}\n\nconst Content = (props) =>{\n  return(\n    <div>\n      <Part part={props.parts[0].name} exercise={props.parts[0].exercises}/>\n      <Part part={props.parts[1].name} exercise={props.parts[1].exercises}/>\n      <Part part={props.parts[2].name} exercise={props.parts[2].exercises}/>\n    </div>\n  )\n}\n\nconst Total = (props) =>{\n  return(\n    <div>\n      <p>The total number of exercises is: {props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises }</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <div>\n      <Header course={Course.name} />\n      <Content parts={Course.parts}/>\n      <Total parts={Course.parts} />\n    </div>\n  )\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n*/\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst App = () => {\n  const [counter, setCounter] = useState(0);\n  setTimeout(() => setCounter(counter + 1), 1000);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, counter);\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/jorge/Practica/Full-Stack-course/part1/src/index.js"],"names":["React","useState","ReactDOM","App","counter","setCounter","setTimeout","render","document","getElementById"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BJ,QAAQ,CAAC,CAAD,CAAxC;AACAK,EAAAA,UAAU,CAAK,MAAMD,UAAU,CAACD,OAAO,GAAG,CAAX,CAArB,EAAuC,IAAvC,CAAV;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,OAAN,CADF;AAGD,CAND;;AAQAF,QAAQ,CAACK,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["/*\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n\nconst Course ={\n  name:'Half Stack application development',\n  parts:\n  [{\n    name: 'Fundamentals of React',\n    exercises: 10\n  },\n  {\n    name: 'Using props to pass data',\n    exercises: 7\n  },\n  {\n    name: 'State of a component',\n    exercises: 14\n  }],\n}\n\nconst Part= (props) =>{\n  return(\n    <div>\n      <p>{props.part} {props.exercise}</p>\n    </div>\n  )\n}\n\nconst Header = (props) =>{\n  return(\n    <div>\n      <h1>{props.course}</h1>\n    </div>\n  )\n}\n\nconst Content = (props) =>{\n  return(\n    <div>\n      <Part part={props.parts[0].name} exercise={props.parts[0].exercises}/>\n      <Part part={props.parts[1].name} exercise={props.parts[1].exercises}/>\n      <Part part={props.parts[2].name} exercise={props.parts[2].exercises}/>\n    </div>\n  )\n}\n\nconst Total = (props) =>{\n  return(\n    <div>\n      <p>The total number of exercises is: {props.parts[0].exercises + props.parts[1].exercises + props.parts[2].exercises }</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <div>\n      <Header course={Course.name} />\n      <Content parts={Course.parts}/>\n      <Total parts={Course.parts} />\n    </div>\n  )\n}\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n*/\nimport React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst App = () => {\n  const [ counter, setCounter ] = useState(0)\n  setTimeout(    () => setCounter(counter + 1),    1000  )\n  return (\n    <div>{counter}</div>\n  )\n}\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}